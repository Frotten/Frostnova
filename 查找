#include <stdio.h>
#include <stdlib.h>
int half(int tar, int* arr, int start, int end) {
	while (start <= end) {
		int middle = (start + end) / 2;
		if (arr[middle] == tar) {
			if (middle == start || arr[middle - 1] != tar) {
				return middle;
			}
			else {
				end = middle - 1;
			}
		}
		else if (arr[middle] < tar) {
			start = middle + 1;
		}
		else {
			end = middle - 1;
		}
	}
	return -1;
}
int main()
{
	int n, m, tag = 1;
	scanf("%d %d", &n, &m);
	int* A = (int*)malloc(sizeof(int) * (n + 1));
	int* B = (int*)malloc(sizeof(int) * (m + 1));
	for (int i = 1; i <= n; i++) {
		scanf("%d", &A[i]);
	}
	for (int i = 1; i <= m; i++) {
		scanf("%d", &B[i]);
	}
	A[0] = -10;
	for (int i = 1; i <= m; i++) {
		int possi = half(B[i], A, 1, n);
		printf("%d ", possi);
	}
	return 0;
}
