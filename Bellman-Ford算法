#include <stdio.h>
#define MAX 9999999;
int main()
{
	int dis[10], bak[10], i, k, n, m, u[10], v[10], w[10], check, flag, start;
	scanf("%d %d", &n, &m);//n为顶点个数，m为边的个数
	for (i = 1; i <= m; i++) {//读入边
		scanf("%d %d %d", &u[i], &v[i], &w[i]);
	}
	for (i = 1; i <= m; i++) {
		dis[i] = MAX;
	}//初始化dis数组，并记录起点到各点的初始距离
	scanf("%d", &start);
	dis[start] = 0;
	for (k = 1; k <= n - 1; k++) {//Bellman-Ford算法核心语句
		check = 0;//记录本次松弛中dis数组是否会发生改变
		//开始松弛
		for (i = 1; i <= m; i++) {
			if (dis[v[i]] > dis[u[i]] + w[i]) {
				dis[v[i]] = dis[u[i]] + w[i];
				check = 1;
			}
		}
		if (check == 0) break;
	}
	//检测负权回路
	flag = 0;
	for (i = 1; i <= m; i++) {
		if (dis[v[i]] > dis[u[i]] + w[i]) 
			flag = 1;
	}
	if (flag == 1) printf("含有负权回路\n");
	else {
		for (i = 1; i <= n; i++) {
			printf("%d ", dis[i]);
		}
	}
	getchar(); getchar();
	return 0;
}
