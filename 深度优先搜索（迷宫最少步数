#include <stdio.h>
int n ,m ,a, b, A, B, min = 99999;
int arr[51][51], Book[51][51];
int next[4][2] = { {0,-1},{0,1},{1,0},{-1,0} };
void DFS(int step, int x, int y)
{
	if (x == A && y == B)
	{
		if (step < min)
		{
			min = step;
		}
		return;
	}
	for (int i = 0; i <= 3; i++)
	{
		int X = x + next[i][0];
		int Y = y + next[i][1];
		if (X < 1 || X > n || Y < 1 || Y > m || Book[X][Y]==1 || arr[X][Y]==1 )
		{
			continue;
		}
		Book[x][y] = 1;
		DFS(step + 1, X, Y);
		Book[x][y] = 0;
	}
	return;
}
int main()
{
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			scanf("%d", &arr[i][j]);//输入地图
	scanf("%d %d %d %d", &a, &b, &A, &B);
	Book[a][b] = 1;
	DFS(0, a, b);
	printf("找到目标位置最少需要%d步", min);
	return 0;
}

//地图示例：(n=m=6)
//0 0 1 0 0 0
//0 0 0 0 0 0
//0 1 0 0 0 0
//0 0 0 0 1 0
//1 0 0 1 0 0
//0 0 0 0 0 0
