#include<iostream>
#include <queue>
using namespace std;
int n;
int a[300][300];//邻接矩阵
int r[300];//r[i]表示i这个点的入度
bool vis[300];//标记是否入队，防止死循环
queue<int>q;//拓补排序的队列
int main() {
	cin >> n;
	//初始化邻接矩阵
	for (int i = 0; i <= 200; i++) {
		for (int j = 0; j <= 200; j++) {
			a[i][j] = -1;
		}
	}
	//邻接矩阵存图
	for (int i = 1; i <= n; i++) {
		while (true) {
			int x;
			cin >> x;
			if (x == 0) {
				break;
			}
			r[x]++;
			a[i][x] = 1;
		}
	}
	//遍历r(即入度数组)，找到所有入度为0的点并将其入队和标记
	for (int i = 1; i <= n; i++) {
		if (r[i] == 0) {
			q.push(i);
			vis[i] = 1;
		}
	}
	//队列非空，证明还有点没有处理
	while (!q.empty()) {
		int x = q.front();//取队首
		cout << x << " ";//输出
		q.pop();//出队
		for (int i = 1; i <= n; i++) {//删除整个图里所有和这个已经处理好的点(即这个如为0的点)的边
			if (a[x][i] == 1) {
				a[x][i] = 0;
				r[i]--;
			}
		}
		for (int i = 1; i <= n; i++) {//再循环，把所有未入队的入度为0的点入队并标记
			if (r[i] == 0 && vis[i] == 0) {
				q.push(i);
				vis[i] = 1;
			}
		}
	}
	return 0;
}
