class Solution {
public:
    unordered_map<int,int> Book;
    TreeNode* Building(vector<int>& preorder,vector<int>& inorder,int preleft,int preright,int inleft,int inright){
        if(preleft > preright) return nullptr;
        int preroot = preleft;
        int inroot = Book[preorder[preroot]];
        TreeNode* root = new TreeNode(preorder[preroot]);
        int sizeleft = inroot - inleft;
        root->left = Building(preorder,inorder,preleft + 1,preleft + sizeleft,inleft,inroot - 1);
        root->right = Building(preorder,inorder,preleft + sizeleft + 1,preright,inroot + 1,inright);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int n = inorder.size();
        for(int i = 0;i < n;i++){
            Book[inorder[i]] = i;
        }
        return Building(preorder,inorder,0,n - 1,0,n - 1);
    }
};
