#include <stdio.h>
#include <stdlib.h>
int compar(const void* a, const void* b) {
	return *(int*)b - *(int*)a;
}
int DFS(int* arr, int* book,int length,int sum,int used,int lenthing,int n,int start) {
	if (used * length == sum) return 1;
	if (used) return DFS(arr, book, length, sum, used + 1, 0, n,0);
	for (int i = start; i < n; i++) {
		if (book[i] == 0 && arr[i] + lenthing <= length) {
			book[i] = 1;
			lenthing += arr[i];
			if (DFS(arr, book, length, sum ,used + 1, lenthing, n,i + 1) == 1) {
				return 1;
			}
			else {
				book[i] = 0;
				if (lenthing == 0 || lenthing + arr[i] == length) return 0;
				while (i + 1 <= n && arr[i] == arr[i + 1]) {
					i++;
				}
				i--;
			}
		}
	}
	return 0;
}
int main()
{
	int n ,max = 0;
	scanf("%d", &n);
	while (n != 0) {
		int arr[100] = { 0 };
		int book[100] = { 0 };
		int sum = 0, max = 0;
		for (int i = 1; i <= n; i++) {
			scanf("%d", &arr[i]);
			sum += arr[i];
			max = (max > arr[i]) ? max : arr[i];
		}
		qsort(arr + 1, n, sizeof(int), compar);
		for (int len = max; len <= sum; len++) {
			if (sum % len == 0) {
				if (DFS(arr, book, len,sum, 0, 0, n, 1)) {
					printf("%d\n", len);
					break;
				}
			}
		}
		scanf("%d", &n);
	}
	return 0;
}
